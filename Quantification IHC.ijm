path = getDirectory("Choose file");
dir=getFileList(path);
folder = File.getName(path);
	for (i=0; i < dir.length; i++) {
		if (endsWith(dir[i],"czi")) {
		open(path+dir[i]);
		name = getTitle();
		series_name = replace(name, ".czi", "");
		rename("IMAGE");
		run("Stack to RGB");
		selectWindow("IMAGE");
		close();
		selectWindow("IMAGE (RGB)");
		run("Set Measurements...", "area mean standard area_fraction display redirect=None decimal=3");
		run("Enhance Contrast", "saturated=0.35");
		run("Duplicate...", " ");
		selectWindow("IMAGE (RGB)");
		run("Colour Deconvolution", "vectors=[H DAB]");
		selectWindow("IMAGE (RGB)-(Colour_3)");
		close();
		selectWindow("IMAGE (RGB)-(Colour_1)");
		close();
		selectWindow("IMAGE (RGB)-(Colour_2)");
		run("Duplicate...", " ");
		saveAs("tiff", path+File.separator+series_name+"_DAB.tiff");
		run("Subtract Background...", "rolling=200 light");
		setThreshold(0, 110);
		waitForUser;
		run("Convert to Mask");
		run("Measure");	
		run("Create Selection");
		run("Make Inverse");
		run("Measure");
		close();
		selectWindow("Colour Deconvolution");
		close();
		run("Duplicate...", " ");
		run("Color Threshold...");
		// Color Thresholder 2.0.0-rc-69/1.52p
		// Autogenerated macro, single images only!
		min=newArray(3);
		max=newArray(3);
		filter=newArray(3);
		a=getTitle();
		run("HSB Stack");
		run("Convert Stack to Images");
		selectWindow("Hue");
		rename("0");
		selectWindow("Saturation");
		rename("1");
		selectWindow("Brightness");
		rename("2");
		min[0]=0;
		max[0]=255;
		filter[0]="pass";
		min[1]=0;
		max[1]=255;
		filter[1]="pass";
		min[2]=235;
		max[2]=255;
		filter[2]="pass";
		for (k=0;k<3;k++){
		  selectWindow(""+k);
		  setThreshold(min[k], max[k]);
		  run("Convert to Mask");
		  if (filter[k]=="stop")  run("Invert");
		};
		imageCalculator("AND create", "0","1");
		imageCalculator("AND create", "Result of 0","2");
		for (k=0;k<3;k++){
		  selectWindow(""+k);
		  close();
		};
		selectWindow("Result of 0");
		close();
		selectWindow("Result of Result of 0");
		rename(a);
		// White Colour Thresholding-------------
		waitForUser;
		rename(series_name+"_white");
		run("Measure");
		run("Create Selection");
		run("Make Inverse");
		run("Measure");
		close();
		run("Color Threshold...");
		// Color Thresholder 2.0.0-rc-69/1.52p
		// Autogenerated macro, single images only!
		min=newArray(3);
		max=newArray(3);
		filter=newArray(3);
		a=getTitle();
		run("HSB Stack");
		run("Convert Stack to Images");
		selectWindow("Hue");
		rename("0");
		selectWindow("Saturation");
		rename("1");
		selectWindow("Brightness");
		rename("2");
		min[0]=0;
		max[0]=255;
		filter[0]="pass";
		min[1]=0;
		max[1]=255;
		filter[1]="pass";
		min[2]=0;
		max[2]=44;
		filter[2]="pass";
		for (k=0;k<3;k++){
		  selectWindow(""+k);
		  setThreshold(min[k], max[k]);
		  run("Convert to Mask");
		  if (filter[k]=="stop")  run("Invert");
		};
		imageCalculator("AND create", "0","1");
		imageCalculator("AND create", "Result of 0","2");
		for (k=0;k<3;k++){
		  selectWindow(""+k);
		  close();
		};
		selectWindow("Result of 0");
		close();
		selectWindow("Result of Result of 0");
		rename(a);
		// Black Colour Thresholding-------------
		waitForUser;
		rename(series_name+"_black");
		run("Measure");
		run("Create Selection");
		run("Make Inverse");
		run("Measure");
		run("Close All");
		};
	};
selectWindow("Results");
saveAs("Results", path+File.separator+series_name+"_Results.xls");
run("Clear Results");